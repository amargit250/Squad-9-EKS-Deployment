name: Build and Deploy Microservices

on:
  push:
    branches:
      - dev
  workflow_dispatch: 

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: terraform-eks-cluster

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Retrieve AWS Account ID
        id: aws-account
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Ensure ECR Repositories Exist
        run: |
          for repo in "appointment" "patient"; do
            aws ecr describe-repositories --repository-names $repo || \
            aws ecr create-repository --repository-name $repo
          done

      - name: Build and Push Docker Image for appointment
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/appointment:latest
          docker build -t $IMAGE_URI ./appointment
          docker push $IMAGE_URI

      - name: Build and Push Docker Image for patient
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/patient:latest
          docker build -t $IMAGE_URI ./patient
          docker push $IMAGE_URI

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Retrieve AWS Account ID
        id: aws-account
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Create Namespace squad-9
        run: |
          kubectl get namespace squad-9 || kubectl create namespace squad-9

      - name: Deploy Microservice 1 using values.yaml (No Chart.yaml)
        run: |
          helm upgrade --install appointment ./appointment/helm \
            --namespace squad-9 \
            -f ./appointment/helm/values.yaml \
            --set image.repository=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/appointment \
            --set image.tag=latest

      - name: Deploy Microservice 2 using values.yaml (No Chart.yaml)
        run: |
          helm upgrade --install patient ./patient/helm \
            --namespace squad-9 \
            -f ./patient/helm/values.yaml \
            --set image.repository=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/patient \
            --set image.tag=latest
