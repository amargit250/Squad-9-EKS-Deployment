name: Build and Deploy Microservices

on:
  push:
    branches:
      - dev
  workflow_dispatch: 

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: <AWS_REGION>

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      
      - name: Build and Push Docker Image for Microservice 1
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservice1:latest
          docker build -t $IMAGE_URI ./microservice1
          docker push $IMAGE_URI

      
      - name: Build and Push Docker Image for Microservice 2
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservice2:latest
          docker build -t $IMAGE_URI ./microservice2
          docker push $IMAGE_URI

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      AWS_REGION: <AWS_REGION>
      EKS_CLUSTER_NAME: <EKS_CLUSTER_NAME>

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      
      - name: Deploy Microservice 1 using Helm
        run: |
          helm upgrade --install microservice1 ./microservice1/helm \
            --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservice1 \
            --set image.tag=latest

      
      - name: Deploy Microservice 2 using Helm
        run: |
          helm upgrade --install microservice2 ./microservice2/helm \
            --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservice2 \
            --set image.tag=latest
